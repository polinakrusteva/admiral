request.container.allocation.missing.resource-pool=Placement state has no resourcePoolLink
request.container.allocation.host.missing=computeHostLink and resourceNames can't be null at this state
request.container.allocation.resource-names.missing=resource names expected at this stage.
request.placement.compute.missing=Compute state not found
request.placement.hosts.missing=No powered-on container hosts found in placement zones: {0}
request.placement.compute-description.unsupported=Available host ComputeDescription not found supporting the type: {0}
request.composition.resource-links.missing=No resourceLinks found for allocated resources.
request.compute.allocation.resource-pool.missing=Placement state has no resourcePoolLink
request.compute.placement.placements.unavailable=No compute placement candidates found in placement zones: {0}
request.compute.placement.powered-on.placements.unavailable=No powered-on compute placement candidates found in placement zones: {0}
request.compute.placement.compute-description.missing=No ComputeDescription found for compute placements
request.compute.provision.empty=No compute instances to provision
request.compute.reservation.placements.missing=No placements found
request.compute.reservation.resource-pools.empty=resourcePoolsPerGroupPlacementLinks must not be empty
request.base.affinity.filter.no.containers=No containers found for filter [{0}] and value of [{1}] for contextId [{2}].
request.base.affinity.filter.many.containers=Container host selection size [{0}] based on filter: [links] with values: [{1}] and contextId [{2}] is not expected to be more than 1.
request.base.affinity.filter.container-descriptions.unavailable=No container descriptions with {0} [{1}].
request.exposed-ports.filter.containers.query.error=Error querying for container states.
request.exposed-ports.filter.compute-hosts.unavailable=No compute hosts found with unexposed ports {0}.
request.volumes.filter.hosts.unavailable=No hosts found supporting the ''{0}'' volume drivers.
request.volumes.filter.multiple.containers=Detected multiple containers sharing local volumes but placed on different hosts.
request.volumes.filter.no.host=Unable to place containers sharing local volumes on the same host.
request.volumes.filter.container-descriptions.query=Exception while filtering container descriptions with local volume names {0}. Error: [{1}]
request.service.affinity.filter.no.containers=No containers found for filter [{0}] and value of [{1}] for contextId [{2}].
request.service.affinity.filter.many.hosts=Container host selection size [{0}] based on filter: [links] with values: [{1}] and contextId [{2}] is not expected to be more than 1.
request.service.affinity.filter.no.container-descriptions=No container descriptions with {0} [{1}].
request.service.anti-affinity.filter.no.host=No host from {0} matches anti-affinity rules {1}.
request.volumes.from.filter.no.containers=No containers found for filter [{0}] and value of [{1}] for contextId [{2}].
request.volumes.from.filter.many.hosts=Container host selection size [{0}] based on filter: [links] with values: [{1}] and contextId [{2}] is not expected to be more than 1.
request.volumes.from.filter.no.container-descriptions=No container descriptions with {0} [{1}].
request.system.container.day2=Day2 operations are not supported for system container
request.resource-count.zero='resourceCount' must be greater than 0.
request.container.allocation.group.empty='groupResourcePlacementLink' must not be empty
request.container.allocation.resource.count=Resource count must be equal to number of resources during post allocation.
request.resource-count.equals.resource-links=Size of 'resourceLinks' must be equal to 'resourcesCount'
request.resource-type.not.supported=Not supported resourceType: {0}
request.operation.not.supported=Not supported operation: {0}
request.closure.operation.not.supported=Not supported operation for closure type: {0}
request.supported.resource-types=Only [ {0} ] resource types are supported.
request.composition.cyclic.dependency=Cyclic dependency detected.
request.composition.cyclic.dependency.processing=Cyclic dependency detected after processing.
request.composition.dependency.not.resolved=Dependency on name: [{0}] can't be resolved in component: [{1}].
request.composition.duplicate.names=Components with duplicate name [{0}] detected for resources [{1}] and [{2}].
request.composition.cyclic.dependency.during.process=Cyclic dependency detected during processing.
request.composition.unsupported.type="Unsupported type. Must be: {0}, {1}, {2} or {3}
request.compute.allocation.links.empty='groupResourcePlacementLink' and 'resourcePoolLink' cannot be both empty.
request.provision.endpoint-link.empty='endpointLink' must not be empty
request.provision.links.empty='computeDescriptionLink' or 'hostDescription' is required
request.affinity.computes.not.found=No computes found for filter and value of [{0}] for contextId [{1}].
request.affinity.multiple.selections=Compute host selection size [{0}] based on filter: [links] with values: [{1}] and contextId [{2}] is not expected to be more than 1.
request.affinity.no.compute-doesc=No compute descriptions with [{0}].
request.anti-affinity.no.host.matches=No host from %s matches anti-affinity rules %s.